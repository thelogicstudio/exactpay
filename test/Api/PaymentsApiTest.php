<?php
/**
 * PaymentsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  TheLogicStudio\ExactPay
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Embedded Payments
 *
 * Embedding payments into your software platform can be one of the most powerful value drivers for your customers and your top line. Imagine your software delivering the entire order-to-cash cycle including funding right into the customerâ€™s bank account. We provide low code integration- With just a single API, you can go live with Exact Payments. Onboard customers, automated underwriting, receive webhook notifications when your customers is live and ready to take payments. We have all the payment types your customers want and their buyers need. Credit and debit cards plus ACH payments, Apple Pay, Google Pay, Paypal, recurring payments, card-on-file and more. Dive into our API Reference and add embedded payments with Exact today!
 *
 * The version of the OpenAPI document: 1.0.4
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace TheLogicStudio\ExactPay\Test\Api;

use \TheLogicStudio\ExactPay\Configuration;
use \TheLogicStudio\ExactPay\ApiException;
use \TheLogicStudio\ExactPay\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * PaymentsApiTest Class Doc Comment
 *
 * @category Class
 * @package  TheLogicStudio\ExactPay
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PaymentsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for accountCapturePayment
     *
     * Capture an existing authorization for a given Account.
     *
     */
    public function testAccountCapturePayment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountGetPayment
     *
     * Get details of a specific Payment for a given Account.
     *
     */
    public function testAccountGetPayment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountGetPayments
     *
     * Get Payments for a given Account.
     *
     */
    public function testAccountGetPayments()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountPostPayment
     *
     * Create Payment for a given Account.
     *
     */
    public function testAccountPostPayment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountRefundPayment
     *
     * Refund a specific Payment for a given Account.
     *
     */
    public function testAccountRefundPayment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountVoidPayment
     *
     * Void a specific Payment for a given Account.
     *
     */
    public function testAccountVoidPayment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for capturePayment
     *
     * Capture an existing authorization.
     *
     */
    public function testCapturePayment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPayment
     *
     * Get details of a specific Payment.
     *
     */
    public function testGetPayment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPayments
     *
     * Get Payments.
     *
     */
    public function testGetPayments()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postPayment
     *
     * Create Payment.
     *
     */
    public function testPostPayment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for refundPayment
     *
     * Refund a specific payment.
     *
     */
    public function testRefundPayment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for voidPayment
     *
     * Void a specific Payment.
     *
     */
    public function testVoidPayment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
