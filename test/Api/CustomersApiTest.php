<?php
/**
 * CustomersApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  TheLogicStudio\ExactPay
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Embedded Payments
 *
 * Embedding payments into your software platform can be one of the most powerful value drivers for your customers and your top line. Imagine your software delivering the entire order-to-cash cycle including funding right into the customerâ€™s bank account. We provide low code integration- With just a single API, you can go live with Exact Payments. Onboard customers, automated underwriting, receive webhook notifications when your customers is live and ready to take payments. We have all the payment types your customers want and their buyers need. Credit and debit cards plus ACH payments, Apple Pay, Google Pay, Paypal, recurring payments, card-on-file and more. Dive into our API Reference and add embedded payments with Exact today!
 *
 * The version of the OpenAPI document: 1.0.4
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace TheLogicStudio\ExactPay\Test\Api;

use \TheLogicStudio\ExactPay\Configuration;
use \TheLogicStudio\ExactPay\ApiException;
use \TheLogicStudio\ExactPay\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * CustomersApiTest Class Doc Comment
 *
 * @category Class
 * @package  TheLogicStudio\ExactPay
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class CustomersApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for accountDeleteCustomerCustomerIdPaymentMethodToken
     *
     * Delete Payment Method Associated with Customer by Token (Partner context).
     *
     */
    public function testAccountDeleteCustomerCustomerIdPaymentMethodToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountDeleteCustomerId
     *
     * Delete Customer by ID (Partner context).
     *
     */
    public function testAccountDeleteCustomerId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountGetCustomer
     *
     * Query Customers (Partner context).
     *
     */
    public function testAccountGetCustomer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountGetCustomerCustomerIdPaymentMethodToken
     *
     * Get Payment Method Associated with Customer by Token (Partner context).
     *
     */
    public function testAccountGetCustomerCustomerIdPaymentMethodToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountGetCustomerCustomerIdPayments
     *
     * Get Customer Payments (Partner context).
     *
     */
    public function testAccountGetCustomerCustomerIdPayments()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountGetCustomerDefaultPaymentMethod
     *
     * Get Default Payment Method Associated to a Customer (Partner context).
     *
     */
    public function testAccountGetCustomerDefaultPaymentMethod()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountGetCustomerId
     *
     * Get Customer by ID (Partner context).
     *
     */
    public function testAccountGetCustomerId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountGetCustomerIdPaymentMethod
     *
     * Query Payment Methods of a Customer (Partner context).
     *
     */
    public function testAccountGetCustomerIdPaymentMethod()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountGetCustomerTokenPaymentMethod
     *
     * Query Payment Methods for Customer by customer token (Partner context).
     *
     */
    public function testAccountGetCustomerTokenPaymentMethod()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountPostCustomer
     *
     * Create Customer (Partner context).
     *
     */
    public function testAccountPostCustomer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountPostCustomerIdPaymentMethod
     *
     * Attach Payment Method to a Customer (Partner context).
     *
     */
    public function testAccountPostCustomerIdPaymentMethod()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountPutCustomerId
     *
     * Update Customer by ID (Partner context).
     *
     */
    public function testAccountPutCustomerId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteCustomerCustomerIdPaymentMethodToken
     *
     * Delete Payment Method Associated with Customer by Token (Sub-merchant context).
     *
     */
    public function testDeleteCustomerCustomerIdPaymentMethodToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteCustomerId
     *
     * Delete Customer by ID (Sub-merchant context).
     *
     */
    public function testDeleteCustomerId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCustomer
     *
     * Query customers (Sub-merchant context).
     *
     */
    public function testGetCustomer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCustomerCustomerIdPaymentMethodToken
     *
     * Get Payment Method Associated with Customer by Token (Sub-merchant context).
     *
     */
    public function testGetCustomerCustomerIdPaymentMethodToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCustomerCustomerIdPayments
     *
     * Get Customer Payments (Sub-merchant context).
     *
     */
    public function testGetCustomerCustomerIdPayments()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCustomerId
     *
     * Get Customer by ID (Sub-merchant context).
     *
     */
    public function testGetCustomerId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCustomerIdPaymentMethod
     *
     * Query Payment Methods of a Customer (Sub-merchant context).
     *
     */
    public function testGetCustomerIdPaymentMethod()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCustomerTokenPaymentMethod
     *
     * Query Payment Methods for Customer by customer token (Sub-merchant context).
     *
     */
    public function testGetCustomerTokenPaymentMethod()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postCustomer
     *
     * Create Customer for (Sub-merchant context).
     *
     */
    public function testPostCustomer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postCustomerIdPaymentMethod
     *
     * Attach Payment Method to a Customer (Sub-merchant context).
     *
     */
    public function testPostCustomerIdPaymentMethod()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for putCustomerId
     *
     * Update Customer by ID (Sub-merchant context).
     *
     */
    public function testPutCustomerId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
