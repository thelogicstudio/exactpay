<?php
/**
 * WebhooksApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  TheLogicStudio\ExactPay
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Embedded Payments
 *
 * Embedding payments into your software platform can be one of the most powerful value drivers for your customers and your top line. Imagine your software delivering the entire order-to-cash cycle including funding right into the customerâ€™s bank account. We provide low code integration- With just a single API, you can go live with Exact Payments. Onboard customers, automated underwriting, receive webhook notifications when your customers is live and ready to take payments. We have all the payment types your customers want and their buyers need. Credit and debit cards plus ACH payments, Apple Pay, Google Pay, Paypal, recurring payments, card-on-file and more. Dive into our API Reference and add embedded payments with Exact today!
 *
 * The version of the OpenAPI document: 1.0.4
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace TheLogicStudio\ExactPay\Test\Api;

use \TheLogicStudio\ExactPay\Configuration;
use \TheLogicStudio\ExactPay\ApiException;
use \TheLogicStudio\ExactPay\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * WebhooksApiTest Class Doc Comment
 *
 * @category Class
 * @package  TheLogicStudio\ExactPay
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class WebhooksApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for accountDeleteWebhook
     *
     * Delete Webhook.
     *
     */
    public function testAccountDeleteWebhook()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountDisableWebhook
     *
     * Disable Webhook.
     *
     */
    public function testAccountDisableWebhook()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountEnableWebhook
     *
     * Enable Webhook.
     *
     */
    public function testAccountEnableWebhook()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountGetListWebhooks
     *
     * List Webhooks.
     *
     */
    public function testAccountGetListWebhooks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountGetRetrieveWebhook
     *
     * Retrieve Webhook.
     *
     */
    public function testAccountGetRetrieveWebhook()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountPostCreateWebhook
     *
     * Create Webhook.
     *
     */
    public function testAccountPostCreateWebhook()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountUpdateWebhook
     *
     * Update Webhook.
     *
     */
    public function testAccountUpdateWebhook()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for organizationOrganizationIdWebhookGet
     *
     * List Webhooks.
     *
     */
    public function testOrganizationOrganizationIdWebhookGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for organizationOrganizationIdWebhookPost
     *
     * Create Webhook.
     *
     */
    public function testOrganizationOrganizationIdWebhookPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for organizationOrganizationIdWebhookWebhookIdDelete
     *
     * Delete Webhook.
     *
     */
    public function testOrganizationOrganizationIdWebhookWebhookIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for organizationOrganizationIdWebhookWebhookIdDisablePut
     *
     * Disable Webhook.
     *
     */
    public function testOrganizationOrganizationIdWebhookWebhookIdDisablePut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for organizationOrganizationIdWebhookWebhookIdEnablePut
     *
     * Enable Webhook.
     *
     */
    public function testOrganizationOrganizationIdWebhookWebhookIdEnablePut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for organizationOrganizationIdWebhookWebhookIdGet
     *
     * Retrieve Webhook.
     *
     */
    public function testOrganizationOrganizationIdWebhookWebhookIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for organizationOrganizationIdWebhookWebhookIdPut
     *
     * Update Webhook.
     *
     */
    public function testOrganizationOrganizationIdWebhookWebhookIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
