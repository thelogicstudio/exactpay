<?php
/**
 * OrdersApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  TheLogicStudio\ExactPay
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Embedded Payments
 *
 * Embedding payments into your software platform can be one of the most powerful value drivers for your customers and your top line. Imagine your software delivering the entire order-to-cash cycle including funding right into the customerâ€™s bank account. We provide low code integration- With just a single API, you can go live with Exact Payments. Onboard customers, automated underwriting, receive webhook notifications when your customers is live and ready to take payments. We have all the payment types your customers want and their buyers need. Credit and debit cards plus ACH payments, Apple Pay, Google Pay, Paypal, recurring payments, card-on-file and more. Dive into our API Reference and add embedded payments with Exact today!
 *
 * The version of the OpenAPI document: 1.0.4
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace TheLogicStudio\ExactPay\Test\Api;

use \TheLogicStudio\ExactPay\Configuration;
use \TheLogicStudio\ExactPay\ApiException;
use \TheLogicStudio\ExactPay\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * OrdersApiTest Class Doc Comment
 *
 * @category Class
 * @package  TheLogicStudio\ExactPay
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OrdersApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for accountAccountIdOrdersOrderIdGet
     *
     * Get Order Details.
     *
     */
    public function testAccountAccountIdOrdersOrderIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountAccountIdOrdersOrderIdPut
     *
     * Update Order.
     *
     */
    public function testAccountAccountIdOrdersOrderIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountAccountIdOrdersPost
     *
     * Create Order specifying an account.
     *
     */
    public function testAccountAccountIdOrdersPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ordersGet
     *
     * List Orders.
     *
     */
    public function testOrdersGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ordersOrderIdAccessTokenPost
     *
     * Create New Access Token.
     *
     */
    public function testOrdersOrderIdAccessTokenPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ordersOrderIdResetPut
     *
     * Reset Payment Attempts.
     *
     */
    public function testOrdersOrderIdResetPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ordersPost
     *
     * Create Order.
     *
     */
    public function testOrdersPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postAccountAccountIdOrdersOrderIdPay
     *
     * Pay for Order with Token.
     *
     */
    public function testPostAccountAccountIdOrdersOrderIdPay()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
